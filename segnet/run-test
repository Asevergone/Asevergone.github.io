#!/usr/bin/env node

var fs = require('fs-extra')
var path = require('path')
var spawnSync = require('child_process').spawnSync
var argv = require('minimist')(process.argv.slice(2), {
  alias: {
    output: 'o',
    train: 't',
    weights: 'w',
    classes: 'c'
  }
})

var computeStats = path.join(__dirname, 'compute_bn_statistics.py')
var runTest = path.join(__dirname, 'test_segmentation.py')

if (!argv.train || !argv.weights || !argv.classes) {
  console.error('Usage: ' + process.argv.slice(0, 2).join(' ') + ' --train train.prototxt --weights weights.caffemodel --classes class-defs.json --output /path/to/results/output')
  console.log(argv)
  process.exit(1)
}

var train = path.resolve(argv.train)
var weights = path.resolve(argv.weights)
var classes = path.resolve(argv.classes)
if (argv.output) {
  argv.output = weights.replace('.caffemodel', '.results')
}
var output = path.resolve(argv.output)
if (!fs.existsSync(output)) {
  fs.mkdirSync(output)
}

// guess the inference.prototxt filename
var inference = argv.inference || train.replace('train', 'inference')

// dir for outputting the BN-stats-infused weights
var inferenceDir = weights.replace('.caffemodel', '.inference')
fs.mkdirSync(inferenceDir)

console.log('Computing batch normalization stats.')
spawnSync('python', [
  computeStats,
  train,
  weights,
  inferenceDir
], { stdio: 'inherit' })

console.log('Running inference.')
spawnSync('python', [
  runTest,
  '--model', inference,
  '--weights', path.join(inferenceDir, 'test_weights.caffemodel'),
  '--classes', classes,
  '--output', output
], { stdio: 'inherit' })

fs.copySync(path.join(__dirname, '../results-viewer/dist'), output)

console.log('Done!')

